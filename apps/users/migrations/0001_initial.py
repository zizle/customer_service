# Generated by Django 2.1.1 on 2019-07-01 09:48

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        ('customers', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('real_name', models.CharField(blank=True, max_length=20, verbose_name='姓名')),
                ('mobile', models.CharField(blank=True, max_length=11, null=True, unique=True, verbose_name='手机号')),
                ('leader', models.BooleanField(default=False, verbose_name='部门或小组负责人')),
                ('level', models.SmallIntegerField(choices=[(0, '超级管理员'), (1, '公司管理员'), (2, '部门管理员'), (3, '小组管理员'), (4, '普通用户')], default=4, verbose_name='账号类型')),
                ('text_1', models.CharField(blank=True, max_length=128, null=True, verbose_name='备用1')),
                ('text_2', models.CharField(blank=True, max_length=128, null=True, verbose_name='备用2')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='organizations.Organization', verbose_name='部门或小组')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subs', to=settings.AUTH_USER_MODEL, verbose_name='父级用户')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'users_user',
                'get_latest_by': 'id',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('content', models.CharField(max_length=255, verbose_name='支持的内容')),
                ('effective', models.BooleanField(default=True, verbose_name='是否有效')),
                ('status', models.SmallIntegerField(choices=[(0, '未读'), (1, '通过'), (-1, '驳回')], default=0, verbose_name='状态')),
                ('type', models.SmallIntegerField(choices=[(1, '普通'), (2, '授权')], default=1, verbose_name='支持类型')),
                ('text_1', models.CharField(blank=True, max_length=128, null=True, verbose_name='备用1')),
                ('text_2', models.CharField(blank=True, max_length=128, null=True, verbose_name='备用2')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='leader_support', to='customers.Customer', verbose_name='客户')),
                ('handler', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='handled_supports', to=settings.AUTH_USER_MODEL, verbose_name='处理人')),
                ('sponsor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supports', to=settings.AUTH_USER_MODEL, verbose_name='支持发起者')),
            ],
            options={
                'verbose_name': '上级支持',
                'verbose_name_plural': '上级支持',
                'db_table': 'users_support',
            },
        ),
    ]
